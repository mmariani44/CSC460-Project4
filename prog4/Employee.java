/*
 * Employee.java -- Object containing all the data necessary for a single Employee record for Prog4.java
 * 		   		-- This represents the data required for Employee table.
 *             	-- Also contains toString() and GetFields() methods.
 *
 * Author: Mauricio Brooks, Mason Mariani, Arnav Popat
 *
 * First Version: 2023-05-02.
 */

package prog4;

import java.util.UUID;

/*+----------------------------------------------------------------------
 ||
 ||  Class Employee 
 ||
 ||         Author:  Mauricio Brooks, Mason Mariani, Arnav Popat
 ||        Purpose:  Object containing all the data necessary for a single 
 ||						Employee in the hotel company DB for Prog4.java
 ||                   
 ||
 ||  Inherits From:  None.
 ||
 ||     Interfaces:  None.
 ||
 |+-----------------------------------------------------------------------
 ||
 ||      Fields:  
 ||                 public String employeeId -- unique id of employee,
 || 					 generated by UUID.randomUUID().toString()
 ||                 public String hotelId -- unique id of hotel of Employee
 ||                 public String firstName -- employee first name
 ||					public String lastName -- employee last name
 ||                 public String duty -- job title
 ||                 public float wage -- hourly wage
 ||                 
 ||
 |+-----------------------------------------------------------------------
 ||
 ||   Constructors:  public Employee(String hotelId, String firstName,
 ||						String lastName, String duty, float wage)
 ||
 ||  Inst. Methods:  public String toString() -- returns field vals as a comma-separated string
 ||                  String getFields() -- returns field names matching DB columns
 ||                  
 ++-----------------------------------------------------------------------*/
public class Employee {
	
	public String employeeId;
	public String hotelId;
	public String firstName;
	public String lastName;
	public String duty;
	public float wage;
	

	/*---------------------------------------------------------------------
	|  Constructor Employee(String hotelId, String firstName, String lastName, String duty, float wage)
	|
	|  Purpose:  Creates Employee object to represent a single Employee for hotels.
	|
	|  Pre-condition:  hotelId, firstName, lastName, duty, wage are passed in.
	|
	|  Post-condition: Columns and values are stored in this object. Easy getters.
	|
	|  Parameters:
	|       		String hotelId -- unique id of hotel of Employee
	|				String firstName -- employee first name
	|				String lastName -- employee last name
	|				String duty -- job title
	|				float wage -- hourly wage
	|
	|
	|  Returns: Employee object with given field values.
	*-------------------------------------------------------------------*/
	public Employee(String hotelId, String firstName, String lastName, String duty, float wage) {
		this.employeeId = UUID.randomUUID().toString();
		this.hotelId = hotelId;
		this.firstName = firstName;
		this.lastName = lastName;
		this.duty = duty;
		this.wage = wage;
	}
	

	/*---------------------------------------------------------------------
	|  Method toString()
	|
	|  Purpose:  Turns Employee object field vals into a comma-separated string
	|
	|  Pre-condition:  fields are set.
	|
	|  Post-condition: converts Employee vals to string and returns it.
	|
	|  Parameters: None.
	|
	|
	|  Returns: String. Comma-separated string of Employee's field vals.
	*-------------------------------------------------------------------*/
	@Override
	public String toString() {
		return employeeId + ", " + hotelId + ", " + firstName + ", " + lastName + ", " + duty + ", " + wage;
	}

	

	/*---------------------------------------------------------------------
	|  Method GetFields()
	|
	|  Purpose: Turns Employee column names into a comma-separated string
	|
	|  Pre-condition:  None.
	|
	|  Post-condition: converts Employee column names to string and returns it.
	|
	|  Parameters: None.
	|
	|
	|  Returns: String. Comma-separated string of Employee's column names.
	*-------------------------------------------------------------------*/
	public static String GetFields() {
		return "employeeId, hotelId, firstName, lastName, duty, wage";
	}

}
