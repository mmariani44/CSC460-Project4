/**
 * Assignment:  Program #4
 * Author:  Arnav Popat
 * Course: CSC 460
 * Instructor: L. McCann
 * Due Date: May 2nd 2023
 * Description: Stores the strings needed for all SQL queries used by Prog4.java. Stores with 
 * '%s' for parameters.
 *
 * Language: Java 16
 * External Packages: None
 *
 * Deficiencies: 
 * None
 *
 * String Constants: 
 * query1
 * query2
 * query3
 * query4
 * query5
 *
 * Constructors:
 * none
 *
 * Public Methods:
 * none
 */

package queries;

public class Queries {
	public static final String query1 = // parameter(s): clientId

			
"""
WITH unpaid_amenities AS (
    SELECT 
        hb.clientId,
        ha.amenityId,
        ha.price
    FROM 
        mmariani44.HotelBooking hb
    JOIN 
        mmariani44.HotelAmenity ha ON hb.hotelId = ha.hotelId
    WHERE 
        NOT EXISTS (SELECT 1 FROM mmariani44.HotelRating hr WHERE hr.amenityId = ha.amenityId AND hr.clientId = hb.clientId)
)
SELECT 
    hc.clientId,
    hc.firstName,
    hc.lastName,
    (hr.roomRate * (hb.endDate - hb.startDate) * 
    (1 - 
        (CASE WHEN hc.membershipDiscount = 1 THEN 0.15 ELSE 0 END) - 
        (CASE WHEN hc.creditDiscount = 1 THEN 0.10 ELSE 0 END) - 
        (CASE WHEN hc.isStudent = 1 THEN 0.20 ELSE 0 END)
    )) + COALESCE(SUM(ua.price), 0) AS totalBill
FROM 
    mmariani44.HotelClient hc
JOIN 
    mmariani44.HotelBooking hb ON hc.clientId = hb.clientId
JOIN 
    mmariani44.HotelRoom hr ON hb.hotelId = hr.hotelId AND hb.roomId = hr.roomId
LEFT JOIN 
    unpaid_amenities ua ON ua.clientId = hc.clientId
WHERE 
    hb.clientId = %s
GROUP BY 
    hc.clientId, hc.firstName, hc.lastName, hr.roomRate, hb.startDate, hb.endDate, hc.membershipDiscount, hc.creditDiscount, hc.isStudent;			
""";
	
	public static final String query2 = // parameter(s): date 
			
"""
SELECT 
    hc.clientId,
    hc.firstName,
    hc.lastName,
    hb.roomId,
    hc.membershipType
FROM 
    mmariani44.HotelClient hc
JOIN 
    mmariani44.HotelBooking hb ON hc.clientId = hb.clientId
WHERE 
    TO_DATE('%s', 'YYYY-MM-DD') BETWEEN hb.startDate AND hb.endDate
ORDER BY 
    hc.membershipType, hb.roomId;		
""";

	public static final String query3 = // parameters(s): startdate

"""
SELECT 
    he.firstName,
    he.lastName,
    hs.dateStart,
    hs.dateEnd
FROM 
    mmariani44.HotelEmployee he
JOIN 
    mmariani44.HotelShift hs ON he.employeeId = hs.employeeId
WHERE 
    hs.dateStart >=  TO_DATE('%s', 'YYYY-MM-DD') AND hs.dateEnd <= TO_DATE('%s', 'YYYY-MM-DD')
ORDER BY 
    he.employeeId, hs.dateStart;
""";

	
	public static final String query4 = // parameters(s): startdate end date

			
"""
SELECT 
    ha.amenityName,
    AVG(hr.rating) AS averageRating
FROM 
    mmariani44.HotelAmenity ha
JOIN 
    mmariani44.HotelRating hr ON ha.amenityId = hr.amenityId
WHERE 
    hr.ratingDate BETWEEN TO_DATE('%s', 'YYYY-MM-DD') AND TO_DATE('%s', 'YYYY-MM-DD')
GROUP BY 
    ha.amenityName
ORDER BY 
    averageRating DESC;		
""";
	
	// total revenue generated by a specific hotel between two dates provided by the user. 
	public static final String query5 =
"""
SELECT 
    hh.hotelId,
    hh.name,
    SUM(hr.roomRate * (hb.endDate - hb.startDate) * 
    (1 - 
        (CASE WHEN hc.membershipDiscount = 1 THEN 0.15 ELSE 0 END) - 
        (CASE WHEN hc.creditDiscount = 1 THEN 0.10 ELSE 0 END) - 
        (CASE WHEN hc.isStudent = 1 THEN 0.20 ELSE 0 END)
    )) AS roomRevenue,
    (SELECT SUM(ha.price)
     FROM mmariani44.HotelAmenity ha
     JOIN mmariani44.HotelRating hr ON ha.amenityId = hr.amenityId
     WHERE ha.hotelId = %s AND hr.ratingDate BETWEEN TO_DATE('%s', 'YYYY-MM-DD') AND TO_DATE('%s', 'YYYY-MM-DD')) AS amenityRevenue
FROM 
    mmariani44.HotelHotel hh
JOIN 
    mmariani44.HotelBooking hb ON hh.hotelId = hb.hotelId
JOIN 
    mmariani44.HotelClient hc ON hc.clientId = hb.clientId
JOIN 
    mmariani44.HotelRoom hr ON hb.hotelId = hr.hotelId AND hb.roomId = hr.roomId
WHERE 
    hh.hotelId = %s AND
    hb.startDate >= TO_DATE('%s', 'YYYY-MM-DD') AND hb.endDate <= TO_DATE('%s', 'YYYY-MM-DD')
GROUP BY 
    hh.hotelId,
    hh.name;
""";	
			
}
